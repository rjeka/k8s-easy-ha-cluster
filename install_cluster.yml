---
#Add directory for cert
- name: Add tmp directory
  hosts: localhost
  gather_facts: no

  tasks:
    - name: create temp cert directory
      file:
        path: "{{ item }}"
        state: directory
        force: yes
      loop:
        - /tmp/k8s
        - /tmp/etcd/certs/
      tags:
        - etcd
        - ssl


# Installing Kubernetes
- name: Installing shared packages Docker and Kubernetes for the masters and work nodes
  hosts: [kube_masters, kube_workers, kube_ingress ]
  become: yes
  become_method: sudo

  tasks:
    - name: set sysctl
      sysctl:
        name: "{{ item }}"
        value: "1"
      loop:
        - net.ipv4.ip_forward
      tags:
        - kubelet
        - docker

    - name: Install docker
      include_role:
        name: docker
      tags: docker


    - name: Install kubernetes
      include_role:
        name: "{{ item }}"
      with_items:
      - kubelet
      tags: kubelet



#Install the soft that is only needed on the masters
- name: Install ETCD
  hosts: [kube_masters]
  become: yes
  become_method: sudo

  tasks:
    - name: Install etcd
      include_role:
        name: "{{ item }}"
      with_items:
      - etcd
      tags:
        - etcd
        - ssl

#Init First master
- name: Init first master
  hosts: [kube_masters]
  become: yes
  become_method: sudo

  tasks:
    - name: install git
      apt:
        name: git
      tags: first_master
      when: inventory_hostname == "{{hostvars[groups['kube_masters'][0]]['inventory_hostname']}}"

    - name: Reset Old Cluster and del docker containers
      shell: |
        kubeadm reset --force
      tags: first_master
      when: inventory_hostname == "{{hostvars[groups['kube_masters'][0]]['inventory_hostname']}}"


    - name: Init First master {{ansible_hostname}}
      include_role:
        name: init_first_master
      tags: first_master
      when: inventory_hostname == "{{hostvars[groups['kube_masters'][0]]['inventory_hostname']}}"