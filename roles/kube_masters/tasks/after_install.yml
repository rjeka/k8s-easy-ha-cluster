- name: Reset kubernetes token file
  file:
    path: /opt/config/token.txt
    state: absent
  tags:
    - first_masters
    - kube_masters
    - other_masters
  when: inventory_hostname == "{{hostvars[groups['kube_masters'][0]]['inventory_hostname']}}"

- name: Create tokens file
  file:
    path: /opt/config/token.txt
    state: touch
    force: yes
  when: inventory_hostname == "{{hostvars[groups['kube_masters'][0]]['inventory_hostname']}}"
  tags:
    - first_masters
    - kube_masters
    - other_masters


- name: Add export KUBECONFIG=/etc/kubernetes/admin.conf to bashrc
  lineinfile:
    path: /root/.bashrc
    line: "{{ item }}"
  loop:
    - 'export KUBECONFIG=/etc/kubernetes/admin.conf'
    - 'source <(kubectl completion bash)'
  tags:
    - first_masters
    - kube_masters
    - other_masters

- name: Apply bashrc changes
  shell: |
    source /root/.bashrc
  args:
    executable: /bin/bash
  tags:
    - first_masters
    - kube_masters
    - other_masters

- name: create kubernetes config directory
  file:
    path: ~/.kube/
    state: directory
  become: false
  tags:
    - first_masters
    - kube_masters
    - other_masters


- name: create kubernetes root config directory
  file:
    path: /root/.kube/
    state: directory
  tags:
    - first_masters
    - kube_masters
    - other_masters

- name: permissions for admin.conf
  file:
    path: /etc/kubernetes/admin.conf
    mode: 0775
  tags:
    - first_masters
    - kube_masters
    - other_masters


- name: copy admin.conf to home directory
  copy:
    src: /etc/kubernetes/admin.conf
    dest: "~/.kube/config"
    mode: 0755
    remote_src: True
  become: false
    - first_masters
    - kube_masters
    - other_masters

- name: copy admin.conf to root home directory
  copy:
    src: /etc/kubernetes/admin.conf
    dest: "/root/.kube/config"
    remote_src: true
  tags:
    - first_masters
    - kube_masters
    - other_masters


- name: Get kubeadm token
  shell: |
    kubeadm token create --print-join-command --ttl=0
  register: kubeadmToken
  when: inventory_hostname == "{{hostvars[groups['kube_masters'][0]]['inventory_hostname']}}"
  tags:
    - first_masters
    - kube_masters
    - other_masters


- name: Put kubernetes token to file
  lineinfile:
    path: /opt/config/token.txt
    line: "{{ kubeadmToken.stdout }}"
  when: inventory_hostname == "{{hostvars[groups['kube_masters'][0]]['inventory_hostname']}}"
  tags:
    - first_masters
    - kube_masters
    - other_masters


- name: Copy init token to ansible host
  fetch:
    src: /opt/config/token.txt
    dest: /tmp/k8s/
  when: inventory_hostname == "{{hostvars[groups['kube_masters'][0]]['inventory_hostname']}}"
  tags:
    - first_masters
    - kube_masters
    - other_masters


- name: Copy kubeadmin token to ansiblehost
  fetch:
    src: "/opt/config/token.txt"
    dest: "/tmp/k8s/token.txt"
    flat: yes
  with_items:
    - "{{ files_to_copy.stdout_lines }}"
  when: inventory_hostname == "{{hostvars[groups['kube_masters'][0]]['inventory_hostname']}}"
  tags:
    - first_masters
    - kube_masters
    - other_masters


- name: Install Calico
  shell: |
    kubectl apply -f https://docs.projectcalico.org/v{{ calico_version }}/manifests/calico.yaml
  tags:
    - first_masters
    - kube_masters
    - other_masters
  when: inventory_hostname == "{{hostvars[groups['kube_masters'][0]]['inventory_hostname']}}"