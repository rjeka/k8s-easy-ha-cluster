---
- name: deploy crictl {{ crictl_version }}


  unarchive:
    src: "https://github.com/kubernetes-sigs/cri-tools/releases/download/{{ crictl_version }}/crictl-{{ crictl_version }}-linux-amd64.tar.gz"
    dest: "/usr/local/bin"
    remote_src: yes
  tags: containerd  

- name: create containerd.conf
  template:
    src: containerd.conf.j2
    dest: /etc/modules-load.d/containerd.conf
  tags: containerd

- name: create kernel module
  community.general.modprobe:
    name: "{{ item }}"
  loop:
    - overlay
    - br_netfilter
  tags: containerd

- name: set sysctl values
  ansible.posix.sysctl:
    name: "{{ item }}"
    value: "1"
  loop:
    - net.bridge.bridge-nf-call-iptables
    - net.ipv4.ip_forward
    - net.bridge.bridge-nf-call-ip6tables
  tags: containerd

- name: Preinstall packages
  apt:
    name: ['apt-transport-https', 'ca-certificates', 'software-properties-common', 'curl']
    update_cache: yes
  tags: containerd

- name: Add docker gpg key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  tags: containerd

- name:  Get docker repositorie
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: present
  tags: containerd  

- name: install containerd
  ansible.builtin.apt:
    name: containerd.io 
    update_cache: yes
  tags: containerd

- name: create config
  file:
    path: /etc/containerd
    state: directory
  tags: containerd


- name: create default config
  shell: |
    containerd config default | sudo tee /etc/containerd/config.toml && crictl config runtime-endpoint unix:///var/run/containerd/containerd.sock && \
    sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml && \
    PAUSE_IMAGE=$(kubeadm config images list | grep pause) && \
    sed -i "s,sandbox_image = .*,sandbox_image = \"$PAUSE_IMAGE\",g" /etc/containerd/config.toml
  notify: restart containerd
  tags: containerd