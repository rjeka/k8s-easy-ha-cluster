- name: restart Keepalived
  systemd:
    name: keepalived
    state: restarted
  when: vrrp == "true"

- name: Create kubeadm config directory
  file:
    path: /opt/config/kubeadm
    state: directory

- name: Copy —Åonfig kubeadm-init.yaml v1alpha3
  template:
    src: kubeadm-init.yaml.j2
    dest: /opt/config/kubeadm/kubeadm-init.yaml
  when: kubeaApi != "new"

- name: Copy config kubeadm-init.yaml v1beta2
  template:
    src: kubeadm-init-new.yaml.j2
    dest: /opt/config/kubeadm/kubeadm-init.yaml
  when: kubeaApi == "new"



#- name: pull images of k8s with the docker
#  shell: |
#    kubeadm config images pull


- name: Create master node
  shell: |
    kubeadm init --config=kubeadm-init.yaml
  args:
    chdir: /opt/config/kubeadm/

- name: Reset kubernetes token file
  file:
    path: /opt/config/token.txt
    state: absent

- name: Create tokens file
  file:
    path: /opt/config/token.txt
    state: touch
    force: yes
  when: inventory_hostname == "master1"


- name: Add export KUBECONFIG=/etc/kubernetes/admin.conf to bashrc
  lineinfile:
    path: /root/.bashrc
    line: 'export KUBECONFIG=/etc/kubernetes/admin.conf'

- name: Apply bashrc changes
  shell: |
    source /root/.bashrc
  args:
    executable: /bin/bash

- name: create kubernetes config directory
  file:
    path: ~/.kube/
    state: directory
  become: false

- name: create kubernetes root config directory
  file:
    path: /root/.kube/
    state: directory

- name: permissions for admin.conf
  file:
    path: /etc/kubernetes/admin.conf
    mode: 0775

- name: copy admin.conf to home directory
  copy:
    src: /etc/kubernetes/admin.conf
    dest: "~/.kube/config"
    mode: 0755
    remote_src: True
  become: false

- name: copy admin.conf to root home directory
  copy:
    src: /etc/kubernetes/admin.conf
    dest: "/root/.kube/config"
    remote_src: true

- name: Get kubeadm token
  shell: |
    kubeadm token create --print-join-command --ttl=0
  register: kubeadmToken
  when: inventory_hostname == "master1"


- name: Put kubernetes token to file
  lineinfile:
    path: /opt/config/token.txt
    line: "{{ kubeadmToken.stdout }}"
  when: inventory_hostname == "master1"

- name: Copy init token to ansible host
  fetch:
    src: /opt/config/token.txt
    dest: /tmp/k8s/
  when: inventory_hostname == "master1"

- name: Get file names to copy
  shell: |
    find /etc/kubernetes/pki -type f
  register: files_to_copy
  when: inventory_hostname == "master1"

- name: Copy cert to ansiblehost
  fetch:
    src: "{{ item }}"
    dest: /tmp/k8s/
  with_items:
   - "{{ files_to_copy.stdout_lines }}"
  when: inventory_hostname == "master1"

- name:  install Calico CNI old version
  shell: |
    kubectl apply -f https://docs.projectcalico.org/v3.3/getting-started/kubernetes/installation/hosted/rbac-kdd.yaml && \
    kubectl apply -f https://docs.projectcalico.org/v3.3/getting-started/kubernetes/installation/hosted/kubernetes-datastore/calico-networking/1.7/calico.yaml
  args:
    executable: /bin/bash
  become: false
  when:
    - inventory_hostname == "master1"
    - CIDR == "192.168.0.0/16"
    - kubeVersion != "stable"

- name:  install Calico CNI new version
  shell: |
    kubectl apply -f https://docs.projectcalico.org/v3.7/manifests/calico.yaml
  args:
    executable: /bin/bash
  become: false
  when:
    - inventory_hostname == "master1"
    - CIDR == "192.168.0.0/16"
    - kubeVersion == "stable"

- name: install Canal CNI
  shell: |
    kubectl apply -f https://docs.projectcalico.org/v3.3/getting-started/kubernetes/installation/hosted/canal/rbac.yaml && \
    kubectl apply -f https://docs.projectcalico.org/v3.3/getting-started/kubernetes/installation/hosted/canal/canal.yaml
  when:
    - inventory_hostname == "master1"
    - CIDR == "10.244.0.0/16"



- name:  install Flanel CIDR
  shell: |
    kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/v0.10.0/Documentation/kube-flannel.yml
  args:
    executable: /bin/bash
  become: false
  when:
    - inventory_hostname == "master1"
    - CIDR == "10.244.0.0/16"
