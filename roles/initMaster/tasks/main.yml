- name: restart Keepalived
  systemd:
    name: keepalived
    state: restarted

- name: Create kubeadm config directory
  file:
    path: /opt/config/kubeadm
    state: directory

- name: Config kubeadm-init.yaml
  template:
    src: kubeadm-init.yaml.tmpl
    dest: /opt/config/kubeadm/kubeadm-init.yaml

- name: Add containerd criSocket to kubeadm-init.yaml
  lineinfile:
    path: /opt/config/kubeadm/kubeadm-init.yaml
    line: 'criSocket: /run/containerd/containerd.sock'
  when: criType == "containerd"

- name: pull images of k8s with the docker
  shell: |
    kubeadm config images pull
  when: criType == "docker"

- name: pull images of k8s with the crictl
  shell: |
    kubeadm config images pull --cri-socket-path /run/containerd/containerd.sock
  when: criType == "containerd"


- name: Create master node with Docker
  shell: |
    kubeadm init --config=kubeadm-init.yaml
  args:
    chdir: /opt/config/kubeadm/
  when: criType == "docker"
  register: kubernetesToken

- name: Create master node with Containerd
  shell: |
    kubeadm init --config=kubeadm-init.yaml --skip-preflight-checks
  args:
    chdir: /opt/config/kubeadm/
  when: criType == "containerd"
  register: kubernetesToken

- name: Reset kubernetes token file
  file:
    path: /opt/config/token.txt
    state: absent

- name: Create token file
  file:
    path: /opt/config/token.txt
    state: touch
    force: yes

- name: Print kubernetes token
  lineinfile:
    path: /opt/config/token.txt
    line: "{{ kubernetesToken.stdout_lines | last }}"

- name: Copy init token to ansible host
  fetch:
    src: /opt/config/token.txt
    dest: /tmp/k8s/
  when: inventory_hostname == "master1"

- name: Add export KUBECONFIG=/etc/kubernetes/admin.conf to bashrc
  lineinfile:
    path: /root/.bashrc
    line: 'export KUBECONFIG=/etc/kubernetes/admin.conf'

- name: Apply bashrc changes
  shell: |
    source /root/.bashrc
  args:
    executable: /bin/bash

- name: create kubernetes config directory
  become_user: "{{ kubernetesUser }}"
  file:
    path: ~/.kube/
    state: directory

- name: permissions for admin.conf
  file:
    path: /etc/kubernetes/admin.conf
    mode: 0775

- name: copy admin.conf to home directory
  become_user: "{{ kubernetesUser }}"
  copy:
    src: /etc/kubernetes/admin.conf
    dest: "~/.kube/config"
    owner: "{{ kubernetesUser }}"
    mode: 0755
    remote_src: True

- name: Get file names to copy
  shell: |
    find /etc/kubernetes/pki -type f
  register: files_to_copy
  when: inventory_hostname == "master1"

- name: Copy cert to ansiblehost
  fetch:
    src: "{{ item }}"
    dest: /tmp/k8s/
  with_items:
   - "{{ files_to_copy.stdout_lines }}"
  when: inventory_hostname == "master1"

- name:  install Calico CIDR
  become_user: "{{ kubernetesUser }}"
  shell: |
    kubectl apply -f https://docs.projectcalico.org/v3.1/getting-started/kubernetes/installation/hosted/rbac-kdd.yaml && \
    kubectl apply -f https://docs.projectcalico.org/v3.1/getting-started/kubernetes/installation/hosted/kubernetes-datastore/calico-networking/1.7/calico.yaml
  args:
    executable: /bin/bash
  when: inventory_hostname == "master1"
